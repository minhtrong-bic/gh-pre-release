#!/usr/bin/env bash


branch=""
scope=""

# Function to display script usage
function display_usage {
  echo "Usage: gh pre-release -b <branch> -s <scope>"
  echo ""
  echo "Options:"
  echo "  -b branch Specify the branch you want to create PR to master"
  echo "  -s scope  Scope of the release, it must be 1 of: patch, minor and major"
  echo ""
  exit 1
}

while [[ $# -gt 0 ]]; do
  key="$1"
  case $key in
    -b)
      branch="$2"
      shift
      shift
      ;;
    -s)
      scope="$2"
      shift
      shift
      ;;
    *)
      display_usage
      ;;
  esac
done

if [[ -z "$branch" ]]; then
  echo "Error: branch name is required"
  display_usage
fi

if [ "$scope" != "patch" ] && [ "$scope" != "minor" ] && [ "$scope" != "major" ]; then
    echo "Scope is not 'patch', 'minor', or 'major'"
    display_usage
fi

function preRelease {
  echoGreenText "Fetch origin $branch"
	git fetch origin $branch
  echoGreenText "Checkout local $branch or track it from origin"
	git checkout $branch
  echoGreenText "Pull origin $branch to make sure it is up to date"
	git pull origin $branch
	NEW_VERSION=$(npm version $scope)
  awk -v new_version="$NEW_VERSION" '/^sonar.projectVersion/ { $0 = "sonar.projectVersion=" new_version } 1' sonar-project.properties > sonar-project.properties.tmp
  mv sonar-project.properties.tmp sonar-project.properties
  git add sonar-project.properties
  echoGreenText "Updated the version to $NEW_VERSION"
  git commit --amend --no-edit

	git push origin $branch
	gh pr create --fill --base master --head $branch --label master
  echoGreenText "Done!!!"
}

function echoGreenText {
  echo -e "\033[0;32m$1\033[0m"
}
preRelease